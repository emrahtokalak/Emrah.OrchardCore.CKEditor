@model HtmlBodyPartViewModel
@{
    var settings = Model.TypePartDefinition.GetSettings<HtmlBodyPartSettings>();
    var ckeditorSettings = Model.TypePartDefinition.GetSettings<HtmlBodyPartCKEditorSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.ContentItem) ?? CultureInfo.CurrentUICulture;
}

<script asp-name="CKEditor" asp-src="~/Emrah.OrchardCore.CKEditor/scripts/ckeditor-classic-orchardcore/ckeditor.js" at="Foot" depends-on="admin"></script>

@await DisplayAsync(await New.ShortcodeModal())

<div class="mb-3">
    <label asp-for="Html">@Model.TypePartDefinition.DisplayName()</label>
    @if (culture.IsRightToLeft())
    {
        <div style="text-align:right">
            <textarea asp-for="Html"></textarea>
        </div>
    }
    else
    {
        <textarea asp-for="Html"></textarea>
    }
    <span class="hint">@T["The body of the content item."]</span>
</div>

<script at="Foot" type="text/javascript">

    var optionsTextArea = document.getElementById('@Html.IdFor(x => x.Html)');
    if (optionsTextArea) {
        ClassicEditor
            .create(optionsTextArea, @Html.Raw(ckeditorSettings.Options))
            .then(editor => {
                editor.model.document.on('change:data', () => {
                 
                    editor.updateSourceElement();
                 
                    $(document).trigger('contentpreview:render');
                })
            })
            .catch(error => {
                console.error(error);
            });
    }
</script>
